#!/bin/sh

### v3.0
###
### This script upgrades all the installed ports
### for which a new version is available.

## INIT section (don't change)

# Where the script resides
WP=$(dirname $0)

# Config file to use
CONF=$WP/$(basename $0).conf
LOG=$WP/$(basename $0).log


if [ -z "$(pkg info -qo portmaster)" ]; then
	echo "ports-mgmt/portmaster not installed (required)"	> /dev/stderr
	exit 1;
fi

if [ -f $CONF ]; then
	# Check for ports to ignore.
	for a in $(cat $CONF | grep -e '^ignore' | cut -d '=' -f2-); do
		if [ ! -z $a ]; then IGNORE="$IGNORE -x $a"; fi
	done;
else
	# Create new config file.
	echo "## Update config file (autogenerated)"		> $CONF
	echo "# Ports to ignore (see also portmaster(8))"	> $CONF
	echo "#ignore=screen nvidia-driver"			> $CONF
fi

if [ ! -z $(fuser $WP/portmaster.log 2> /dev/null) ]; then
	echo "Portmaster logfile currently in use, exiting!"	> /dev/stderr
	echo "(did you run refresh recently?)"			> /dev/stderr
	exit 1;
fi

if [ "$(grep moved $WP/portmaster.log)" ]; then
	echo "Moved ports detected, please handle those first!"	> /dev/stderr
	read -p "Run pmmove? (Y/n) " ansmove

	if [ "$ansmove/" == "/" -o "$ansmove" != "n" ]; then
		./pmmove;
	else
		echo "Exiting; please run pmmove manually."	> /dev/stderr
	fi

	exit 1
fi

## FUNCTIONS

build() {
	portmaster -a $IGNORE\
	| tee $LOG
}

build_failed() {
	portmaster $(cut -f2 -d '>' ~/portmasterfail.txt)\
	| tee $WP/update_failed.log
}

## MAIN section

if [ -e ~/portmasterfail.txt -a "$1" != "failed" ]; then
	echo "I detected ~/portmasterfail.txt."
	read -p "Use? (y/N) " answer
	if [ "$answer" == "y" ]; then
		failed=1;
		echo "Using ~/portmasterfail.txt"
	fi;
	if [ "$failed" != "1" ]; then
		read -p "Remove? (Y/n) " answer2
		if [ "$answer2/" == "/" -o "$answer2" != "n" ]; then
			rm ~/portmasterfail.txt && echo "Removed."
		fi;
	fi;
fi

if [ -z $1 ]; then
	build
elif [ "$1" == "failed" -o $failed ]; then
	build_failed
fi

