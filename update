#!/bin/sh

## INIT section (don't change)

# Where the script resides
WP=`dirname $0`

# Parse config file
CONF=$WP/`basename $0`.conf

if [ -f $CONF ]; then
	# Check for ports to ignore.
	for a in $(cat update.conf | grep ignore | cut -d '=' -f2-); do
		IGNORE="$IGNORE -x $a";
	done;
else
	# Create new config file.
	echo "## Update config file (autogenerated)"		> $CONF
	echo "# Ports to ignore (see also portmaster(8))"	> $CONF
	echo "#ignore=screen nvidia-driver"			> $CONF
fi;

if [ ! -z `fuser portmaster.log 2> /dev/null` ]; then
	echo "Portmaster logfile currently in use, exiting!"	> /dev/stderr
	echo "(did you run refresh recently?)"			> /dev/stderr
	exit 1;
fi

if [ "$(grep moved $WP/portmaster.log)" ]; then
	echo Moved ports detected, please handle those first!	> /dev/stderr
	exit 1
fi

if [ "$1" == "jail" ]; then
   if [ ! "$2" ]; then
	jail=$(awk '/^.*\{/ {print $1}' /etc/jail.conf);
	if [ ! "$jail" ]; then
		echo "No jail available, exiting!"		> /dev/stderr
		exit 1
	else
		echo "No jail specified on commandline, trying to use: $jail";
	fi
   else
	jail=$1;
   fi

   if [ ! "$(jls | grep $jail)" ]; then
	echo "Jail $jail isn't running, exiting!"		> /dev/stderr
	exit 1
   fi
fi

## FUNCTIONS

build() {
	portmaster -a $IGNORE\
	| tee $WP/$0$1.log
}

build_failed() {
	portmaster $(cut -f2 -d '>' /tmp/portmasterfail.txt)\
	| tee $WP/$0_failed.log
}

build_jail() {
	echo "Re-starting build process within jail $jail." > $WP/$0.log
	jexec -l $jail $WP/update
}

upgrade() {
	pkg upgrade
}

## MAIN section

if [ $jail ]; then
	build_jail
elif [ "$1" == "pkg" ]; then
	upgrade
elif [ "$1" == "pf" ]; then
	build_failed
else
	build
fi

